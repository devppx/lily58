/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        go_to_num_pad_layer {
            bindings = <&tog 3>;
            key-positions = <26 25 52>;
        };

        slash {
            bindings = <&kp KP_SLASH>;
            key-positions = <44 31>;
        };

        back_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <41 28>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 29>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <30 31>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <40 41>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <44 45>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <30 29>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <41 44>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   |  ESC  |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
      &kp ESC    &kp N1  &kp N2    &kp N3    &kp N4  &kp N5                       &kp N6    &kp N7    &kp N8     &kp N9    &kp N0              &kp GRAVE
      &kp TAB     &kp Q   &kp W     &kp E     &kp R   &kp T                        &kp Y     &kp U     &kp I      &kp O     &kp P              &bspc_del
&mt LCTRL ESC     &kp A   &kp S     &kp D     &kp F   &kp G                        &kp H     &kp J     &kp K      &kp L  &kp SEMI                &kp SQT
    &kp LSHFT  &kp PIPE   &kp Z     &kp X     &kp C   &kp V   &kp LBKT  &kp RBKT   &kp B     &kp N     &kp M  &kp COMMA   &kp DOT  &mt RIGHT_SHIFT SLASH
                                 &kp LALT  &kp LGUI   &mo 1  &kp SPACE   &kp RET   &mo 2  &kp BSPC  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp KP_N0 K_VOLUME_UP &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR      &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &trans     &trans           &trans    &trans    &trans     &trans
   &kp TAB            &kp N1             &kp N2             &kp N3        &kp N4        &kp N5                     &kp N6     &kp N7           &kp N8    &kp N9    &kp N0    &kp DEL
 &kp GRAVE          &kp EXCL             &kp AT           &kp HASH    &kp DOLLAR     &kp PRCNT                  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
    &trans  &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG        &trans        &trans  &trans  &trans  &kp EQUAL  &kp MINUS      &kp KP_PLUS  &kp LBRC  &kp RBRC   &kp PIPE
                                                            &trans        &trans        &trans  &trans  &trans     &trans     &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp KP_N0 K_VOLUME_UP &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
    &trans        &trans        &trans        &trans        &trans        &trans                       &trans        &trans        &trans        &trans        &trans    &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP    &trans
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                     &kp HOME      &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT   &kp END
    &kp F7        &kp F8        &kp F9       &kp F10       &kp F11       &kp F12  &trans  &trans  &kp KP_PLUS     &kp MINUS     &kp EQUAL      &kp LBKT      &kp RBKT  &kp BSLH
                                              &trans        &trans        &trans  &trans  &trans       &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp KP_N0 K_VOLUME_UP &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        num_pad {
            bindings = <
&trans    &trans    &trans        &trans                &trans                 &trans                               &trans  &trans      &trans  &trans           &trans            &trans
&trans    &trans    &kp UP        &trans                &trans                 &trans                            &kp EQUAL  &kp N7      &kp N8  &kp N9      &kp KP_PLUS      &kp KP_MINUS
&trans  &kp LEFT  &kp DOWN     &kp RIGHT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                            &kp CARET  &kp N4      &kp N5  &kp N6  &kp KP_MULTIPLY     &kp KP_DIVIDE
&trans    &trans    &trans        &trans              &kp AMPS                 &kp AT     &trans     &trans    &kp PERCENT  &kp N1      &kp N2  &kp N3    &kp LESS_THAN  &kp GREATER_THAN
                            &kp LEFT_ALT              &kp LGUI                  &none  &kp SPACE  &kp ENTER  &kp BACKSPACE  &kp N0  &kp KP_DOT
            >;

            sensor-bindings = <&inc_dec_kp KP_N0 K_VOLUME_UP &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
